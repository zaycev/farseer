package distr.bi;import "collector.proto";message DataAuthor {	enum Type {		TOPIC = 0;		COMMENT = 1;	}		required Type type = 1;	required string uri = 2;	required string name = 3;}message DataComment {	required string uri = 1;	required DataAuthor author = 2;	required float time = 3;					/* time when the comment was posted in UNIX format*/	required string text = 4;					/* comment text without html*/	required string refs = 5;					/* reference inside the comment*/	required uint32 pos_raiting = 6;			/* number of comment positive votes*/	required uint32 neg_raiting = 7;			/* number of comment negative votes*/}message JobRiverRange {	required collector.JobMeta meta = 1;	optional uint32 f = 2;						/* (from) start page*/	optional uint32 t = 3;						/* (to) end page*/	repeated uint32 sample = 4;					/* enumerated peges*/}message JobRiverUri {	required collector.JobMeta meta = 1;	required string uri = 2;}message JobRawRiver {	required collector.JobMeta meta = 1;	required string html = 2;	required string uri = 3;}message JobRawTopic {	required collector.JobMeta meta = 1;	required string river_uri = 2;	required string uri = 3;	required string title = 4;	required float time = 5;					/* time when a topic was posted in UNIX format*/	required int32 views = 6;				/* number of page views*/	required int32 comments = 7;			/* number of comments*/	required string short_text = 8;				/* short text from topic's river*/	optional string image_uri = 9;				/* image of topic inside topic's river*/	optional string html = 10;	optional string full_text = 11;				/* full text from topic*/	optional bytes image_data = 12;				/* image from river 'as is'*/	optional collector.DataSR response = 13;	optional collector.DataRSR response_raw = 14;		repeated string tags = 15;	repeated DataAuthor authors = 16;	repeated DataComment comments_data = 17;}